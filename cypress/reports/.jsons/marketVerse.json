{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-04-29T12:23:23.852Z",
    "end": "2025-04-29T12:30:02.924Z",
    "duration": 399072,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c5f60dc7-bc0e-447d-8978-3e9acdcbb9d2",
      "title": "",
      "fullFile": "cypress\\e2e\\spec.cy.js",
      "file": "cypress\\e2e\\spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69da6308-0a6b-495d-bdde-235f1836af84",
          "title": "Companies name",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Passes with Soft Assertions",
              "fullTitle": "Companies name Passes with Soft Assertions",
              "timedOut": null,
              "duration": 397792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\e2e\\\\spec.cy.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\spec.cy.js\\\\Companies name -- Passes with Soft Assertions (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Ensure TKR is defined before using it\nif (!TKR) {\n  throw new Error('TKR is not defined');\n} // Visit the login page\n\ncy.wait(2000);\ncy.visit('https://app.marketverse.ai'); // // Commented out login steps (uncomment if required)\ncy.get('#identifier-field').type('aima.ahmad@datics.ai');\ncy.get('.cl-formButtonPrimary').click();\ncy.get('#password-field').should('be.visible').type('1234567890', {\n  force: true\n});\ncy.get('.cl-formButtonPrimary').click();\ncy.wait(5000); // Wait for the page to load\n// Iterate through each company name in the CSV\nTKR.forEach(row => {\n  const companyName = row['Company Name']; // Replace with the correct column name from your CSV\n  // Type into the search field and press Enter\n  cy.get('.MuiInputBase-root').type(`${companyName}{enter}`); // Wait for options to load and click the desired option\n  cy.wait(2000);\n  cy.get('.css-1wtcfwn .MuiAutocomplete-option').click(); // Wait for the next page or information to load\n  cy.wait(5000); // Perform soft assertions\n  cy.softAssert(() => {\n    cy.get('.css-18q30ne').should('be.visible');\n  });\n  cy.softAssert(() => {\n    cy.get('.css-kbn7if > :nth-child(1) > :nth-child(1) > .css-1rh32ff').should('be.visible');\n  }); // cy.get('.css-kbn7if > :nth-child(1) > :nth-child(1) > .css-1rh32ff').then(($el) => {\n  //   const actualValue = $el.is(':visible');\n  //   const expectedValue = true;\n  //   cy.softAssert(actualValue, expectedValue, \"Element Visible.\");\n  // });\n  cy.softAssert(() => {\n    cy.get('.css-3aa918 > .css-1i71sjj').should('be.visible');\n  });\n  cy.softAssert(() => {\n    cy.get(':nth-child(4) > .css-1i71sjj').should('be.visible');\n  });\n  cy.softAssert(() => {\n    cy.get(':nth-child(1) > .css-1ayaret > .MuiBox-root').should('be.visible');\n  });\n  cy.softAssert(() => {\n    cy.get(':nth-child(2) > .css-1ayaret').should('be.visible');\n  });\n}); // Assert all soft assertions at the end of the test\ncy.assertAll();",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.css-1wtcfwn .MuiAutocomplete-option`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.css-1wtcfwn .MuiAutocomplete-option`, but never found it.\n    at eval (webpack:///./cypress/e2e/spec.cy.js:52:9)\nat Array.forEach (<anonymous>)\n    at Context.eval (webpack:///./cypress/e2e/spec.cy.js:44:8)",
                "diff": null
              },
              "uuid": "401a68aa-f4f1-4bc7-8dcd-237a281c15d0",
              "parentUUID": "69da6308-0a6b-495d-bdde-235f1836af84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "401a68aa-f4f1-4bc7-8dcd-237a281c15d0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 397792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "marketVerse.html",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "MarketVerse",
        "embeddedScreenshots": true,
        "reportDir": "cypress\\reports\\.jsons",
        "reportFilename": "marketVerse.html",
        "overwrite": false,
        "inlineAssets": true,
        "saveAllAttempts": true,
        "videoOnFailOnly": true,
        "debug": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}